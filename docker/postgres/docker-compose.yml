version: '3.3'
services:
  postgresql: # Es único, se puede poner cualquier nombre pero no se puede repetir.
    container_name: postgresql-servidor # Este es opcional. Pero no se puede repetir con otras imágenes.
    image: postgres:16

    networks:
      - mired
    # command: para agregar parámetros al iniciar el contenedor.
    # ports:
    #  - '5001:5432' # En la izquierda el de docker y en la derecha el de postgress
    environment:
      - POSTGRES_PASSWORD=${PASS_DB}
      - POSTGRES_DB=${NAME_DB}
      - POSTGRES_USER=${USER_DB}
      - PGDATA=/var/lib/postgresql/data
    volumes: # Es lo que vincula es host con el contenedor. Es lo que vincula los datos de la "RAM" y los persiste en el disco.
      # Es buena práctica path relativo desde el proyecto ./_data:/lib/postgresql.
      # - ./_data:/var/lib/postgresql Este es para Windows
      - ~/dockers/postgres/_data:/var/lib/postgresql # Este para Linux
      - ./_sql:/docker-entrypoint-initdb.d   # importa el archivo SQL que genera las tablas, dentro de la carpeta _sql , los ejecuta por orden alfabético.
    labels:
      - "traefik.enable=true" #Habilita traefik
      - "traefik.tcp.routers.postgresql.rule=HostSNI(`*`)" #cualquier dominio que escriba y sea del puerto 5432 lo redirige aca
      - "traefik.tcp.routers.postgresql.entryPoints=postgresql" #asignamos el nombre del entripoint
      - "traefik.tcp.services.postgresql.loadbalancer.server.port=5432" #que escuche a ese puerto
    restart: always # Para que se ejecute cada vez que arranca Docker.

networks:
  mired:
    external: true
